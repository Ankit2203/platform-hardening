variables:
  - name: watcherTrigger
    value: 'INPUT/watcher_automation_input.xlsm'

  - name: ruleTrigger
    value: 'INPUT/rules_automation_input.xlsm'

jobs:
- job: RunPythonScriptWatcher
  pool:
    vmImage: 'ubuntu-latest'
  condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  steps:
    - checkout: self
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
        architecture: 'x64'
    - script: |
        pip install -r requirements.txt
        python AUTOMATION/watcher_automation.py
    - task: CopyFiles@2
      inputs:
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop02'
        publishLocation: 'Container'
  condition: contains(variables['Build.SourcePath'], variables['watcherTrigger'])

- job: RunPythonScriptRules
  pool: 
    vmImage: 'ubuntu-latest'
  condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  steps:
    - checkout: self
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
        architecture: 'x64'
    - script: |
        pip install -r requirements.txt
        python AUTOMATION/rule_generator.py
    - task: CopyFiles@2
      inputs:
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'another_drop02'
        publishLocation: 'Container'
  condition: contains(variables['Build.SourcePath'], variables['ruleTrigger'])
